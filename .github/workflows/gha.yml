
name: Rebuild ALL
on: [push, pull_request]

env:
    GITHUB_REPO:    pmem/pmdk
    DOCKERHUB_REPO: ldorau/pmdk
    #
    DOCKER_USER:     ldorau
    DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

jobs:
  linux:
    name: Rebuild
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USER:          ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_PASSWORD:      ${{ secrets.DOCKERHUB_PASSWORD }}
      DOC_UPDATE_GITHUB_TOKEN: ${{ secrets.DOC_UPDATE_GITHUB_TOKEN }}
      HOST_WORKDIR:   /home/runner/work/pmdk/pmdk
      WORKDIR:        utils/docker
      PMDK_CC:        gcc
      PMDK_CXX:       g++
      MAKE_PKG:       0
      REMOTE_TESTS:   1
      VALGRIND:       1
      SRC_CHECKERS:   0
    strategy:
      fail-fast: false
      matrix:
        CONFIG: ["OS=archlinux-base OS_VER=latest TEST_BUILD=debug",
                 "OS=centos OS_VER=7 TEST_BUILD=debug",
                 "OS=centos OS_VER=8 TEST_BUILD=debug",
                 "OS=debian OS_VER=testing TEST_BUILD=debug PMDK_CC=clang-9 PMDK_CXX=clang++-9",
                 "OS=debian OS_VER=unstable TEST_BUILD=debug PMDK_CC=clang-9 PMDK_CXX=clang++-9",
                 "OS=fedora OS_VER=rawhide TEST_BUILD=debug",
                 "OS=opensuse-leap OS_VER=latest TEST_BUILD=debug",
                 "OS=opensuse-tumbleweed OS_VER=latest TEST_BUILD=debug",
                 "OS=ubuntu OS_VER=rolling TEST_BUILD=debug"]
    steps:
       - name: Clone the git repo
         uses: actions/checkout@v2
         with:
            fetch-depth: 50

       - name: Pull or rebuild the image
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

       - name: Push the image
         run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} images/push-image.sh
